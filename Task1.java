package Tasks;

import java.util.Scanner; // импорт сканера

public class Task1 { //обявление Task 1 класса типа Public

	 public static void main(String[] args) {  //точка входа в программу 
		 int n = 10;   // объявление переменной типа integer и присвоение ей значения 10
		 Scanner sc = new Scanner(System.in);   //вызов метода чтения с клавиатуры
		 String max = "", min = "", str = "";   //объявление переменных max,min, str типа String
		 for (int i = 0; i < n; i++) {    //цикл, с помощью которого заимплеменчен ввод с клавиатуры n количества строк (в данном случае 10)
			 System.out.print("> ");  //вызов метода вывода на консоль символа > , перевод курсора на новую строчку не осуществляется
			 if (sc.hasNextLine()) { //вызов метода, который возвращает boolean - true или false, показывая, есть ли следующая строка.
	 		 str = sc.nextLine();    //вызов метода, который считывает фразу из консоли и присваивает ей значение переменной str, возвращает в точку вызова метода 
		 if (i == 0) {      // сравнение длин каждой из введенной строк, если ее длина равна 0...
			 min = str;     // ..., то ее значение присваивается переменной min
			 }     
		 if (str.length() > max.length()) {   //сравнение длин каждой из введенной строк, если ее длина оказывается больше max...    
			 max = str;     }  // ... , то ее значение присваивается переменной max
		 else if (str.length() < min.length()) {      //сравнение длин каждой из введенной строк, если ее длина оказывается меньше min...
			 min = str;     // ... , то ее значение присваивается переменной min
			 }    
		 }   
	 }
	  System.out.println("max string = " + max + " length=" + max.length()); //вывод на консоль саммой длинной строки (значение max) и ее длины (значения переменной max.length), осуществляется перевод курсора на новую строчку 
	  System.out.println("min string = " + min + " length=" + min.length()); //вывод на консоль саммой короткой строки (значение min) и ее длины (значения переменной min.length), осуществляется перевод курсора на новую строчку 
	  
}
	 } 
	 


